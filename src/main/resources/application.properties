spring.application.name=Atlascan_spring
server.port=8080

# Configuration de la source de données MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/atlascan?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD}

# Configuration Hibernate (JPA)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Configuration de l'encoding
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.format_sql=true

# Configuration de la stratégie de création de schéma
spring.jpa.defer-datasource-initialization=true

# Configuration JWT
jwt.secret=${JWT_SECRET}
jwt.expirationMs=${JWT_EXPIRATION}

##swagger
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.paths-to-match=/** # Include all paths for API documentation
springdoc.model-converters-enabled=false

##oauth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRE}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
